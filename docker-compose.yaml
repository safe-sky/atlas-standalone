services:
  # Postgres (database)
  postgres:
    image: docker.io/postgres:latest
    env_file:
      - ./env/postgres.env
    healthcheck: # Enables condition-based delayed starting of the Keycloak and Atlas containers.
      test: ["CMD-SHELL", "sh -c 'pg_isready -U $${POSTGRES_USER}'"]
      start_period: 3s
      interval: 3s
      timeout: 10s
    restart: always

  # Keycloak (Identity Provider)
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    volumes:
      - ./keycloak-import:/opt/keycloak/data/import # Contains a preconfigured realm which will be imported
    ports:
      - 9999:8080/tcp
    env_file:
      - ./env/keycloak.env
    command:
      - start-dev
      - --import-realm # Import the dev realm
    depends_on:
      postgres:
        condition: service_healthy # Wait for Postgres to start and accept connections
    restart: always

  # Atlas
  atlas:
    image: safe-sky.io/atlas:edge
    pull_policy: always
    volumes:
      - ./atlas-import:/etc/atlas # Contains the license and aerodrome data
    ports:
      - 8080:3842/tcp # Web UI
      - 3840:3480/tcp
      - 3842:3842/tcp
    env_file:
      - ./env/postgres.env
      - ./env/atlas.env
    depends_on:
      postgres:
        condition: service_healthy # Wait for Postgres to start and accept connections
      keycloak:
        condition: service_started
    command:
      - --create-admin-token
      - --serve-statics
    healthcheck: # Enables condition-based delayed starting of the Keycloak and Atlas containers.
      test: ["CMD", "/bin/atlascmd", "system", "health"]
      start_period: 3s
      interval: 3s
      timeout: 10s
    restart: unless-stopped
